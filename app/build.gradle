plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.dicedmelon.gradle.jacoco-android'
}

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "com.test.myapplication"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
        unitTests.all {
            useJUnitPlatform()
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
}

def jUnitRunner = "5.7.0"
dependencies {
    // Misc
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$jUnitRunner"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$jUnitRunner"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jUnitRunner"
}

jacoco{
    toolVersion = "0.8.7"
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
    jacoco.excludes = ['jdk.internal.*']
}